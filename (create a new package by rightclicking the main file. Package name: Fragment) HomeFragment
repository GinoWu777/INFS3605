package (should be the new Fragment package you just created) 

import... 

public class HomeFragment extends Fragment {

    private RecyclerView recyclerView;
    private PostAdapter postAdapter;
    private List<Post> postLists;
    
    private List<String> followingList;

    @Override
    public View onCreateView(LayoutInflater inflater,ViewGroup container, 
                             Bundle savedInstanceState) {
                             
        View view = inflater.inflate(R.layout.fragment_home, container, false);
        
        recyclerView = view.findViewById(R.id.recycler_view);
        recyclerView.setHasFixedSize(true);
        LinearLayoutManager.linearLayoutManager= new LinearLayoutManager(getContext());
        linearLayoutManager.setReverseLayout(true);
        linearLayoutManager.setStackFromEnd(true);
        recyclerView.setLayoutManger(linearLayoutManager);
        postLists = new ArrayList<>();
        postAdapter = new PostAdapter(getContext(),postLists);
        recyclerView.setAdapter(postAdapter); 
        
        checkfollowing();
        return view;
    }
    
    private void checkFollowing(){
        followingList = new ArrayList<>();
        
        DatabaseReference reference = FirebaseDatabase.getInstance().getReference("Follow")
                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
                .child("following");
                
        reference.addValueEventListener(new ValueEventListener(){
        @Override
        public void onDataChange(DataSnapshot dataSnapshot){
            followingList.clear();
            for (DataSnapshot snapshot : dataSnapshot.getChildren()){
                followingList.add(snapshot.getKey());            
            }
            
            readPosts();
        }
        
        @Override
        public void onCancelled(DatabaseError databaseError){
        
        }
        });
    
    }
    
    
    
    
    private void readPosts(){
        DatabaseReference reference = FirebaseDatabase.getInstance().getReference("Posts);
        
        reference.addValueEventListener(new ValueEventListener(){
            @Override
            public void onDataChange(DataSnapshot dataSnapshot){
                postLists.clear();
                for(DataSnapshot snapshot : dataSnapshot.getChildren()){
                   Post post = snapshot.getValue(Post.class);
                   for (String id: followingList){
                       if(post.getPublisher().equals(id){
                          postLists.add(post);
                       }
                   }
                }
                
                postAdapter.notifyDataSetChanged();
            }
            
            @Override
            public void onCancelled(DatabaseError databaseError){
            
            }
        
        });
    
    }
}
                                
