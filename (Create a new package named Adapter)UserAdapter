package Adapter

import android.support.annotation.NonNull;
import android.support.v7.widget.RecyclerView;
import android.view.View; 
import android.view.ViewGroup; 

public class UserAdapter extends RecyclerView.Adapter<UserAdapter.ViewHolder{

    private Context mContext;
    private List<User> mUsers; 
    
    private FirebaseUser firebaseUser;
    
    public UserAdapter(Context mContext, List<User> mUsers) {
        this.mContext = mContext;
        this.mUsers = mUsers;
    }


    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup viewgroup, int i) {
        View view = LayoutInflater.from(mContext).inflate(R.layout.user_item, viewGroup, false);
        return new UserAdapter.ViewHolder(view);
    }
    
    @Override
    public void onBindViewHolder(@NonNull ViewHolder viewHolder, int i) {
     
        firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
        final User user = mUsers.get(i);
        viewHolder.btn_follow.setVisibility(View.VISIBLE);
        
        viewHolder.username.setText(user.getUsername());
        viewHolder.fullname.setText(user.getFullname());
    // go to gradle file and do: implementation 'com.github.bumptech.glide:glide:4.8.0'
        
        Glide.with(mContext).load(user.getImageurl()).into(viewHolder.image_profile);
        isFollowing(user.getId(), viewHolder.btn_follow);
        
        if(user.getId().equals(firebaseUser.getUid())){
           viewHolder.btn_follow.setVisibility(View.GONE);
        }
        
        viewHolder.itemView.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View view){
                SharePreferences.Editor editor = mContext.getSharedPreferences("PREFS", Context.MODE_PRIVATE).edit();
                editor.putString("profileid", user.getId());
                editor.apply();
                
                ((FragmentActicity)mContext).getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,
                        new ProfileFragment()).commit(); 
                        
            }
        });
    
        viewHolder.btn_follow.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view){
                if (viewHolder.btn_follow.getText().toString().equals("follow")){
                    FirebaseDatabase.getInstance().getReference().child("Follow").child(firebaseUser.getUid())
                            .child("following").child(user.getId()).setValue(true);
                    FirebaseDatabase.getInstance().getReference().child("Follow").child(user.getId())
                            .child("followers").child(firebaseUser.getUid()).setValue(true);
                } else{
                    FirebaseDatabase.getInstance().getReference().child("Follow").child(firebaseUser.getUid())
                            .child("following").child(user.getId()).removeValue();
                    FirebaseDatabase.getInstance().getReference().child("Follow").child(user.getId())
                            .child("followers").child(firebaseUser.getUid()).removeValue();
                }
            }
        });
        
    }
    
    @Override
    public int getItemCount() {
        return mUsers.size();
    }
    
    public class ViewHolder extends RecyclerView.ViewHolder{
    
        public TextView username;
        public TextView fullname;
        public CircleImageView image_profile;
        public Button btn_follow;
    
        public ViewHolder(@NonNull View itemView) {
            super(itemView);
            
            username = itemView.findViewById(R.id.username);
            fullname = itemView.findViewById(R.id.fullname);
            image_profile = itemView.findViewById(R.id.image_profile);
            btn_follow = itemView.findViewById(R.id.btn_follow);
        }
    }
    
    private void isFollowing(final String userid, final Button button) {
        DatabaseReference reference = FirebaseDatabase.getInstance().getReference()
                .child("Follow").child(firebaseUser.getUid()).child("following");
        reference.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange (DataSnapshot dataSnapshot) {
                if (dataSnapshot.child(userid).exists()){
                    button.setText("following");
                } else {
                    button.setText("follow");
                }
            }
            
            @Override
            public void onCancelled(DatabaseError databaseError){
            
            }
            
           
        
        }
    
    
    }
    
    
    
 }












}
